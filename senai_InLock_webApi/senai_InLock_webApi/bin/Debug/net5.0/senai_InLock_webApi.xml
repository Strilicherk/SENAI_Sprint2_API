<?xml version="1.0"?>
<doc>
    <assembly>
        <name>senai_InLock_webApi</name>
    </assembly>
    <members>
        <member name="P:senai_InLock_webApi.Controllers.JogosController._jogosRepository">
            <summary>
            Objeto _jogosRepository que irá receber todos os métodos definidos da interface IJogosRepository
            </summary>
        </member>
        <member name="M:senai_InLock_webApi.Controllers.JogosController.#ctor">
            <summary>
            Instancia o objeto _jogosRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:senai_InLock_webApi.Controllers.JogosController.Get">
            <summary>
            Lista todos os jogos e suas informações
            </summary>
            <returns>Uma lista de jogos e um status code</returns>
            http://localhost:5000/api/jogos
            Qualquer usuário logado pode listar
            [Authorize] => verifica se o usuário está logado
        </member>
        <member name="M:senai_InLock_webApi.Controllers.JogosController.Post(senai_InLock_webApi.Domains.JogosDomain)">
            <summary>
            Cadastra um novo jogo
            </summary>
            <param name="novoJogo">Objeto com as informações do jogo cadastrado</param>
            <returns>Um status code 201 - Created</returns>
            http://localhost:5000/api/jogos
            Somente o administrador pode cadastrar um novo jogo
            [Authorize(Roles = "1")] => verifica se o usuário está logado e se ele possui a permissão "1"(administrador)
        </member>
        <member name="P:senai_InLock_webApi.Controllers.UsuariosController._usuariosRepository">
            <summary>
            Objeto _usuariosRepository que irá receber todos os métodos definidos da interface IUsuariosRepository
            </summary>
        </member>
        <member name="M:senai_InLock_webApi.Controllers.UsuariosController.#ctor">
            <summary>
            Instancia o objeto _usuariosRepository para que haja a referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:senai_InLock_webApi.Controllers.UsuariosController.Login(senai_InLock_webApi.Domains.UsuariosDomain)">
            <summary>
            Faz a autenticação do usuário
            </summary>
            <param name="login">objeto com os dados de e-mail e senha</param>
            <returns>Um status code e, em caso de sucesso, os dados do usuário buscado</returns>
        </member>
        <member name="T:senai_InLock_webApi.Domains.JogosDomain">
            <summary>
            Classe que representa a entidade (tabela) Jogos
            </summary>
        </member>
        <member name="T:senai_InLock_webApi.Domains.UsuariosDomain">
            <summary>
            Classe que representa a entidade (tabela) Usuarios
            </summary>
        </member>
        <member name="M:senai_InLock_webApi.Interfaces.IEstudiosRepository.ListarTodos">
            <summary>
            Lista todos os estudios e seus jogos
            </summary>
            <returns>Uma lista de estudios com seus jogos</returns>
        </member>
        <member name="M:senai_InLock_webApi.Interfaces.IJogosRepository.Cadastrar(senai_InLock_webApi.Domains.JogosDomain)">
            <summary>
            Cadastra um novo jogo
            </summary>
            <param name="novoJogo">Objeto novoJogo com as informações que serão cadastradas</param>
        </member>
        <member name="M:senai_InLock_webApi.Interfaces.IJogosRepository.ListarTodos">
            <summary>
            Lista todos jogos e seus respectivos estudios
            </summary>
            <returns>Uma lista de jogoss com seus estudios</returns>
        </member>
        <member name="T:senai_InLock_webApi.Interfaces.IUsuariosRepository">
            <summary>
            Interface responsável pelo repoistório UsuarioRepository
            </summary>
        </member>
        <member name="M:senai_InLock_webApi.Interfaces.IUsuariosRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Valida o usuário
            </summary>
            <param name="email">email do usuário</param>
            <param name="senha">senha do usuário</param>
            <returns>Um objeto do tipo UsuariosDomain que foi buscado</returns>
        </member>
        <member name="T:senai_InLock_webApi.Repositories.EstudiosRepository">
            <summary>
            Classe responsável pelo repositorio dos estudios
            </summary>
        </member>
        <member name="T:senai_InLock_webApi.Repositories.JogosRepository">
            <summary>
            Classe responsável pelo repositorio dos jogos
            </summary>
        </member>
        <member name="F:senai_InLock_webApi.Repositories.JogosRepository.stringConexao">
            <summary>
            String de conexão com o banco de dados
            Data Source = nome do servidor
            initial catalog = nome do banco de dados
            user Id= id do usuário; pwd = senha; = faz a autenticação com o usuário
            </summary>
        </member>
        <member name="M:senai_InLock_webApi.Repositories.JogosRepository.Cadastrar(senai_InLock_webApi.Domains.JogosDomain)">
            <summary>
            Cadastra um novo jogo
            </summary>
            <param name="novoJogo">Objeto novoJogo com as informações que serão cadastradas</param>
        </member>
        <member name="M:senai_InLock_webApi.Repositories.JogosRepository.ListarTodos">
            <summary>
            Lista todos os jogos
            </summary>
            <returns>Uma lista de jogos</returns>
        </member>
        <member name="T:senai_InLock_webApi.Repositories.UsuariosRepository">
            <summary>
            Classe responsável pelo repositorio dos Usuarios
            </summary>
        </member>
        <member name="F:senai_InLock_webApi.Repositories.UsuariosRepository.stringConexao">
            <summary>
            String de conexão com o banco de dados
            Data Source = nome do servidor
            initial catalog = nome do banco de dados
            user Id= id do usuário; pwd = senha; = faz a autenticação com o usuário
            </summary>
        </member>
        <member name="M:senai_InLock_webApi.Repositories.UsuariosRepository.BuscarPorEmailSenha(System.String,System.String)">
            <summary>
            Valida o usuário
            </summary>
            <param name="email">e-mail do usuário</param>
            <param name="senha">senha do usuário</param>
            <returns>Um objeto do tipo UsuariosDomain que foi buscado</returns>
        </member>
    </members>
</doc>
